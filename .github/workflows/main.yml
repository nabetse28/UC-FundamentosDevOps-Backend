# This is a basic workflow to help you get started with Actions

name: Node.js CI/CD

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REPO: nabetse28/uc-fundamentos-devops-backend

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "14.x"
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.6.0
        with:
          mongodb-version: "4.4"

      - name: npm install and test
        run: |
          npm install
          npm run test:nyc
          npx prettier --write ./coverage/coverage-summary.json
        env:
          CI: true

      - name: Upload test results
        if: success() || failure() # run this step even if previous step failed
        uses: actions/upload-artifact@v2 # upload test results
        with:
          name: test-results
          path: |
            ./mochawesome-report/
            ./coverage

      - name: Generate coverage badge
        uses: tj-actions/coverage-badge-js@v1.3
        with:
          output_path: badge.svg

      - name: Commit the badge (if it changed)
        run: |
          if [[ `git status --porcelain` ]]; then
            git config --global user.name 'Esteban Herrera Vargas'
            git config --global user.email 'nabetse.hv.09@gmail.com'
            git add badge.svg
            git commit -m "Autogenerated coverage badge"
            git push
          fi
  build:
    # The type of runner that the job will run on
    needs: [test]
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "12.x"
      - name: Install dependencies
        run: npm install

      - name: SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Login to Dockerhub Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Build and push image
        env:
          CONTAINER_IMAGE: ${{env.REPO}}:${{github.sha}}
          CONTAINER_IMAGE_LATEST: "${{ env.REPO }}:latest"

        run: |
          docker build -t  $CONTAINER_IMAGE -t $CONTAINER_IMAGE_LATEST .  
          docker push $CONTAINER_IMAGE
          docker push $CONTAINER_IMAGE_LATEST

      - name: Scan image
        uses: anchore/scan-action@v2
        id: scan
        with:
          image: ${{env.REPO}}:${{github.sha}}
          grype-version: 0.13.0
          acs-report-enable: true
          fail-build: false
          severity-cutoff: critical
      - name: upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Inspect action SARIF report
        run: cat ${{ steps.scan.outputs.sarif }}
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
